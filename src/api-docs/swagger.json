{
  "openapi": "3.0.2",
  "info": {
    "title": "Cash Machine Mart",
    "description": "This is the back-end api for Cash Machine Mart.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/admin/sign-in": {
      "post": {
        "tags": ["Admin"],
        "summary": "Sign in an admin.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "passwordHash"],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "passwordHash": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful sign in.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "admin": {
                      "$ref": "#/components/schemas/adminData"
                    },
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get admin data. [Requires_Admin_Access_Token]",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/adminData"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin/username": {
      "patch": {
        "summary": "Change admins username. [Requires_Admin_Access_Token]",
        "tags": ["Admin"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["newUsername"],
                "properties": {
                  "newUsername": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin/password-hash": {
      "patch": {
        "summary": "Change admins password hash. [Requires_Admin_Access_Token]",
        "tags": ["Admin"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["oldPasswordHash", "newPasswordHash"],
                "properties": {
                  "oldPasswordHash": {
                    "type": "string"
                  },
                  "newPasswordHash": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin/settings": {
      "get": {
        "summary": "Get admin settings. [Requires_Admin_Access_Token]",
        "tags": ["Admin"],
        "responses": {
          "200": {
            "description": "Admin settings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/adminSettings"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      },
      "patch": {
        "summary": "Update admin settings. [Requires_Admin_Access_Token]",
        "tags": ["Admin"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/adminSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK, The new setting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/adminSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin/email": {
      "put": {
        "tags": ["Admin"],
        "summary": "Create or updates the admins email. [Requires_Admin_Access_Token]",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["newEmail"],
                "properties": {
                  "newEmail": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - A verification code is sent to the submitted email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "verificationToken": {
                      "type": "string",
                      "description": "This token must be sent back with the verification code. It will be expired in 5 minutes."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin/verify-email": {
      "put": {
        "tags": ["Admin"],
        "summary": "Verifies an email. [Requires_Admin_Access_Token]",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["verificationCode", "verificationToken"],
                "properties": {
                  "verificationCode": {
                    "type": "string",
                    "description": "The code that has been sent to the email."
                  },
                  "verificationToken": {
                    "type": "string",
                    "description": "The verification token returned when adding the new email."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - The email is updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "newEmail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "408": {
            "$ref": "#/components/responses/timeOut"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin/forgot-password": {
      "put": {
        "tags": ["Admin"],
        "summary": "Send password recovery link to the admins email. [Requires_Admin_Access_Token]",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - A password recovery link is sent to the admins email. (it expires in 5 minutes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "description": "Recovery email not found. If there is no registered recovery email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Recovery_Email_Not_Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin/recover-password": {
      "put": {
        "tags": ["Admin"],
        "summary": "Recover the admins password hash. [Requires_Admin_Access_Token]",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["recoveryToken", "newPasswordHash"],
                "properties": {
                  "recoveryToken": {
                    "type": "string",
                    "description": "The recovery token that has been attached to the recovery link sent to the admins email."
                  },
                  "newPasswordHash": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - The password hash is updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "408": {
            "$ref": "#/components/responses/timeOut"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/tokens/refresh": {
      "get": {
        "summary": "Refresh an access token. [Requires_User_Access_Token]",
        "tags": ["Tokens"],
        "parameters": [{ "$ref": "#/components/parameters/refreshToken" }],
        "responses": {
          "200": {
            "description": "Successful refresh.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "newAccessToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/tokens/sign-out": {
      "delete": {
        "summary": "Sign out a user. [Requires_User_Access_Token]",
        "tags": ["Tokens"],
        "parameters": [{ "$ref": "#/components/parameters/refreshToken" }],
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "description": "Api key to access this api.",
        "in": "header",
        "name": "Api-Key"
      }
    },
    "schemas": {
      "adminData": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/adminSettings"
          }
        }
      },
      "adminSettings": {
        "type": "object",
        "properties": {
          "commissionRate": {
            "type": "number"
          }
        }
      },
      "singleResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "refreshToken": {
        "name": "Refresh-Token",
        "description": "The old refresh token.",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        },
        "style": "simple"
      }
    },
    "responses": {
      "success": {
        "description": "Request has been successfully served.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/singleResponse"
            }
          }
        }
      },
      "invalidInput": {
        "description": "An invalid input from the user, like not sending required params.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/singleResponse"
            }
          }
        }
      },
      "unauthorized": {
        "description": "An invalid or missing access token",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/singleResponse"
            }
          }
        }
      },
      "notFound": {
        "description": "Data necessary to process this request is not found in the server.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/singleResponse"
            }
          }
        }
      },
      "timeOut": {
        "description": "Timeout or token expired.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/singleResponse"
            }
          }
        }
      },
      "internalError": {
        "description": "An internal error happened and couldn't serve the request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal_Error"
                }
              }
            }
          }
        }
      }
    }
  }
}
