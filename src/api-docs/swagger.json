{
  "openapi": "3.0.2",
  "info": {
    "title": "Cash Machine Mart",
    "description": "This is the back-end api for Cash Machine Mart.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/admin/sign-in": {
      "post": {
        "tags": ["Admin"],
        "summary": "Sign in an admin.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "passwordHash"],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "passwordHash": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful sign in.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin Sign In"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get admin data. [Requires_Admin_Access_Token]",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin/username": {
      "patch": {
        "summary": "Change admins username. [Requires_Admin_Access_Token]",
        "tags": ["Admin"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["newUsername"],
                "properties": {
                  "newUsername": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin/password-hash": {
      "patch": {
        "summary": "Change admins password hash. [Requires_Admin_Access_Token]",
        "tags": ["Admin"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["oldPasswordHash", "newPasswordHash"],
                "properties": {
                  "oldPasswordHash": {
                    "type": "string"
                  },
                  "newPasswordHash": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin/settings": {
      "get": {
        "summary": "Get admin settings. [Requires_Admin_Access_Token]",
        "tags": ["Admin"],
        "responses": {
          "200": {
            "description": "Admin settings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin Settings"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      },
      "patch": {
        "summary": "Update admin settings. [Requires_Admin_Access_Token]",
        "tags": ["Admin"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Admin Settings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK, The new setting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin Settings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin/email": {
      "put": {
        "tags": ["Admin"],
        "summary": "Create or updates the admins email. [Requires_Admin_Access_Token]",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["newEmail"],
                "properties": {
                  "newEmail": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - A verification code is sent to the submitted email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "verificationToken": {
                      "type": "string",
                      "description": "This token must be sent back with the verification code. It will be expired in 5 minutes."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin/verify-email": {
      "put": {
        "tags": ["Admin"],
        "summary": "Verifies an email. [Requires_Admin_Access_Token]",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["verificationCode", "verificationToken"],
                "properties": {
                  "verificationCode": {
                    "type": "string",
                    "description": "The code that has been sent to the email."
                  },
                  "verificationToken": {
                    "type": "string",
                    "description": "The verification token returned when adding the new email."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - The email is updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "newEmail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "408": {
            "$ref": "#/components/responses/timeout"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin/forgot-password": {
      "put": {
        "tags": ["Admin"],
        "summary": "Send password recovery link to the admins email. [Requires_Admin_Access_Token]",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - A password recovery link is sent to the admins email. (it expires in 5 minutes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "description": "Recovery email not found. If there is no registered recovery email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Recovery_Email_Not_Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/admin/recover-password": {
      "put": {
        "tags": ["Admin"],
        "summary": "Recover the admins password hash. [Requires_Admin_Access_Token]",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["recoveryToken", "newPasswordHash"],
                "properties": {
                  "recoveryToken": {
                    "type": "string",
                    "description": "The recovery token that has been attached to the recovery link sent to the admins email."
                  },
                  "newPasswordHash": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - The password hash is updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "408": {
            "$ref": "#/components/responses/timeout"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/sessions/refresh": {
      "get": {
        "summary": "Refresh an access token. [Requires_User_Access_Token]",
        "tags": ["Sessions"],
        "parameters": [{ "$ref": "#/components/parameters/refreshToken" }],
        "responses": {
          "200": {
            "description": "Successful refresh.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "newAccessToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/sessions/sign-out": {
      "delete": {
        "summary": "Sign out a user. [Requires_User_Access_Token]",
        "tags": ["Sessions"],
        "parameters": [{ "$ref": "#/components/parameters/refreshToken" }],
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/product-categories": {
      "post": {
        "summary": "Add a new product category. [Requires_Admin_Access_Token]",
        "tags": ["Product Categories"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["categoryName"],
                "type": "object",
                "properties": {
                  "categoryName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the created category.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products Category"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "409": {
            "$ref": "#/components/responses/alreadyExist"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      },
      "get": {
        "summary": "Get list of all available categories.",
        "tags": ["Product Categories"],
        "responses": {
          "200": {
            "description": "Returns the list of available categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Products Category"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/product-categories/{categoryId}": {
      "patch": {
        "summary": "Update an existing category. [Requires_Admin_Access_Token]",
        "tags": ["Product Categories"],
        "parameters": [{ "$ref": "#/components/parameters/categoryId" }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "categoryName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated category.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products Category"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/alreadyExist"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      },
      "delete": {
        "summary": "Delete an existing category. [Requires_Admin_Access_Token]",
        "tags": ["Product Categories"],
        "parameters": [{ "$ref": "#/components/parameters/categoryId" }],
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/products": {
      "post": {
        "summary": "Add a new product. [Requires_Admin_Access_Token]",
        "tags": ["Products"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Product Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the created product.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "409": {
            "$ref": "#/components/responses/alreadyExist"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      },
      "get": {
        "summary": "Get list of products.",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "search",
            "description": "Search by Regex",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "productName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "filter",
            "description": "Filter by exact match. (properties in filter overrides properties in search)",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Product"
            }
          },
          {
            "name": "categories",
            "description": "Search entities under these categories.",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "skip",
            "description": "Number of entities to skip (Must be positive)",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "description": "Number of entities to get back (Default:8, Max: 20) (Must be positive).",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "description": "Which properties to get back.",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "description": "Default: {\"createdAt\":-1}",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "property name": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Returns list of products.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/products/count": {
      "get": {
        "summary": "Get count of products.",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "search",
            "description": "Search by Regex",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "productName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "filter",
            "description": "Filter by exact match. (properties in filter overrides properties in search)",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Product"
            }
          },
          {
            "name": "categories",
            "description": "Search entities under these categories.",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns count of products.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "summary": "Get a product by id (this will increment the products 'viewCount' by 1).",
        "tags": ["Products"],
        "parameters": [{ "$ref": "#/components/parameters/productId" }],
        "responses": {
          "200": {
            "description": "Returns a product.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      },
      "patch": {
        "summary": "Update a product.  [Requires_Admin_Access_Token]",
        "tags": ["Products"],
        "parameters": [{ "$ref": "#/components/parameters/productId" }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Product Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated product.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      },
      "delete": {
        "summary": "Delete a product.  [Requires_Admin_Access_Token]",
        "tags": ["Products"],
        "parameters": [{ "$ref": "#/components/parameters/productId" }],
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/affiliates/sign-up": {
      "post": {
        "summary": "Send sign up verification code to the given email.",
        "tags": ["Affiliates"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["fullName", "phone", "email", "passwordHash"],
                "type": "object",
                "properties": {
                  "fullName": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string",
                    "description": "must be unique."
                  },
                  "email": {
                    "type": "string",
                    "description": "must be unique."
                  },
                  "passwordHash": {
                    "type": "string"
                  },
                  "parentId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a sign up verification token that must be sent back when verifying the sign up",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "verificationToken": {
                      "type": "string",
                      "description": "Expires in 5 minutes"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "409": {
            "$ref": "#/components/responses/alreadyExist"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/affiliates/verify-sign-up": {
      "post": {
        "summary": "Verify affiliate sign up.",
        "tags": ["Affiliates"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["verificationToken", "verificationCode"],
                "type": "object",
                "properties": {
                  "verificationToken": {
                    "type": "string",
                    "description": "From the sign up request"
                  },
                  "verificationCode": {
                    "type": "string",
                    "description": "From the affiliates email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a signed in affiliate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Affiliate Sign In"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "408": {
            "$ref": "#/components/responses/timeout"
          },
          "409": {
            "$ref": "#/components/responses/alreadyExist"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/affiliates/sign-in": {
      "post": {
        "summary": "Sign in an affiliate",
        "tags": ["Affiliates"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["phoneOrEmail", "passwordHash"],
                "type": "object",
                "properties": {
                  "phoneOrEmail": {
                    "type": "string"
                  },
                  "passwordHash": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a signed in affiliate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Affiliate Sign In"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/affiliates": {
      "get": {
        "summary": "Get list of affiliates. [Requires_Admin_Access_Token]",
        "tags": ["Affiliates"],
        "parameters": [
          {
            "name": "search",
            "description": "Search by Regex",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "fullName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "filter",
            "description": "Filter by exact match. (properties in filter overrides properties in search)",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Affiliate"
            }
          },
          {
            "name": "skip",
            "description": "Number of entities to skip (Must be positive)",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "description": "Number of entities to get back (Default:8, Max: 20) (Must be positive).",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "description": "Which properties to get back.",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "description": "Default: {\"memberSince\":-1}",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "property name": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Returns list of affiliates.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Affiliate"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/affiliates/{userId}": {
      "get": {
        "summary": "Get an affiliate by its id. [Requires_Admin_Or_Same_Affiliate_Access_Token]",
        "tags": ["Affiliates"],
        "parameters": [{ "$ref": "#/components/parameters/userId" }],
        "responses": {
          "200": {
            "description": "Returns an affiliate.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Affiliate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      },
      "delete": {
        "summary": "Delete an affiliate by its id. [Requires_Same_Affiliate_Access_Token]",
        "tags": ["Affiliates"],
        "parameters": [{ "$ref": "#/components/parameters/userId" }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "passwordHash": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/affiliates/{userId}/children": {
      "get": {
        "summary": "Get children of an affiliate. [Requires_Admin_Or_Same_Affiliate_Access_Token]",
        "tags": ["Affiliates"],
        "parameters": [
          {
            "$ref": "#/components/parameters/userId"
          },
          {
            "name": "skip",
            "description": "Number of entities to skip (Must be positive)",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "description": "Number of entities to get back (Default:8, Max: 20) (Must be positive).",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "description": "Default: {\"memberSince\":-1}",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "property name": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an affiliate.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string"
                      },
                      "fullName": {
                        "type": "string"
                      },
                      "childrenCount": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/affiliates/{userId}/avatar": {
      "put": {
        "summary": "Add or update affiliates avatar. [Requires_Same_Affiliate_Access_Token]",
        "tags": ["Affiliates"],
        "parameters": [{ "$ref": "#/components/parameters/userId" }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an affiliate.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "avatar": { "$ref": "#/components/schemas/Image" }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      },
      "delete": {
        "summary": "Delete an avatar. [Requires_Same_Affiliate_Access_Token]",
        "tags": ["Affiliates"],
        "parameters": [{ "$ref": "#/components/parameters/userId" }],
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/affiliates/{userId}/password": {
      "patch": {
        "summary": "Update affiliates password hash. [Requires_Same_Affiliate_Access_Token]",
        "tags": ["Affiliates"],
        "parameters": [{ "$ref": "#/components/parameters/userId" }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPasswordHash": {
                    "type": "string"
                  },
                  "newPasswordHash": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/affiliates/{userId}/phone": {
      "patch": {
        "summary": "Update affiliates phone. [Requires_Same_Affiliate_Access_Token]",
        "tags": ["Affiliates"],
        "parameters": [{ "$ref": "#/components/parameters/userId" }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPhone": {
                    "type": "string",
                    "description": "must be unique"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/alreadyExist"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/affiliates/{userId}/full-name": {
      "patch": {
        "summary": "Update affiliates full name. [Requires_Same_Affiliate_Access_Token]",
        "tags": ["Affiliates"],
        "parameters": [{ "$ref": "#/components/parameters/userId" }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newFullName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/affiliates/{userId}/email": {
      "patch": {
        "summary": "Update affiliates email (send email verification code to the new email). [Requires_Same_Affiliate_Access_Token]",
        "tags": ["Affiliates"],
        "parameters": [{ "$ref": "#/components/parameters/userId" }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newEmail": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an email verification token that must be sent back when verifying the email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "verificationToken": {
                      "type": "string",
                      "description": "Expires in 5 minutes"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/alreadyExist"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/affiliates/verify-email": {
      "patch": {
        "summary": "Verify and update affiliates email. [Requires_Same_Affiliate_Access_Token]",
        "tags": ["Affiliates"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "verificationToken": {
                    "type": "string"
                  },
                  "verificationCode": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "408": {
            "$ref": "#/components/responses/timeout"
          },
          "409": {
            "$ref": "#/components/responses/alreadyExist"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/affiliates/forgot-password": {
      "patch": {
        "summary": "Send password recovery link to the provided email if there exist an affiliate with that email.",
        "tags": ["Affiliates"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    },
    "/affiliates/recover-password": {
      "patch": {
        "summary": "Set new affiliate password hash",
        "tags": ["Affiliates"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recoveryToken": {
                    "type": "string"
                  },
                  "newPasswordHash": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/invalidInput"
          },
          "408": {
            "$ref": "#/components/responses/timeout"
          },
          "500": {
            "$ref": "#/components/responses/internalError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "description": "Api key to access this api.",
        "in": "header",
        "name": "Api-Key"
      }
    },
    "schemas": {
      "Admin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/Admin Settings"
          }
        }
      },
      "Admin Settings": {
        "type": "object",
        "properties": {
          "commissionRate": {
            "type": "number"
          }
        }
      },
      "Admin Sign In": {
        "type": "object",
        "properties": {
          "Admin": {
            "$ref": "#/components/schemas/Admin"
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "Affiliate": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avatar": {
            "$ref": "#/components/schemas/Image"
          },
          "parentId": {
            "type": "string"
          },
          "memberSince": {
            "type": "string"
          }
        }
      },
      "Affiliate Sign In": {
        "type": "object",
        "properties": {
          "affiliate": {
            "$ref": "#/components/schemas/Affiliate"
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "mainImage": {
            "$ref": "#/components/schemas/Image"
          },
          "moreImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "price": {
            "type": "number"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "commission": {
            "type": "number"
          },
          "published": {
            "type": "boolean"
          },
          "featured": {
            "type": "boolean"
          },
          "topSeller": {
            "type": "boolean"
          },
          "viewCount": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "description": "This is a date string"
          },
          "updatedAt": {
            "type": "string",
            "description": "This is a date string"
          }
        }
      },
      "Product Input": {
        "type": "object",
        "required": ["productDetails"],
        "properties": {
          "productDetails": {
            "description": "    must be stringified JSON",
            "type": "object",
            "required": ["productName", "price", "commission"],
            "properties": {
              "productName": {
                "type": "string",
                "description": "Must be unique"
              },
              "description": {
                "type": "string"
              },
              "price": {
                "type": "number",
                "description": "Must be positive"
              },
              "categories": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "commission": {
                "type": "number",
                "description": "Must be positive"
              },
              "published": {
                "type": "boolean"
              },
              "featured": {
                "type": "boolean"
              },
              "topSeller": {
                "type": "boolean"
              },
              "viewCount": {
                "type": "integer",
                "description": "Must be positive"
              }
            }
          },
          "mainImage": {
            "type": "string",
            "format": "byte"
          },
          "moreImages": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      },
      "Products Category": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "categoryName": {
            "type": "string"
          }
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          }
        }
      },
      "Single Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "refreshToken": {
        "name": "Refresh-Token",
        "description": "The old refresh token.",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "categoryId": {
        "name": "categoryId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "productId": {
        "name": "productId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "userId": {
        "name": "userId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "success": {
        "description": "Request has been successfully served.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Single Response"
            }
          }
        }
      },
      "invalidInput": {
        "description": "An invalid input from the user, like not sending required params.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Single Response"
            }
          }
        }
      },
      "unauthorized": {
        "description": "An invalid or missing access token",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Single Response"
            }
          }
        }
      },
      "notFound": {
        "description": "Data necessary to process this request is not found in the server.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Single Response"
            }
          }
        }
      },
      "alreadyExist": {
        "description": "The entity already exist",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Single Response"
            }
          }
        }
      },
      "timeout": {
        "description": "Timeout or token expired.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Single Response"
            }
          }
        }
      },
      "internalError": {
        "description": "An internal error happened and couldn't serve the request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal_Error"
                }
              }
            }
          }
        }
      }
    }
  }
}
